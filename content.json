{"pages":[{"title":"About","permalink":"http://semitrade.org/about/index.html","text":"光必以明。永远不要放弃自己的人生。"}],"posts":[{"title":"test.md","permalink":"http://semitrade.org/2019/07/01/test-md/","text":"$\\alpha$ $\\frac{a}{b}$"},{"title":"klg001-quantative-finance-timeline","permalink":"http://semitrade.org/2019/05/21/klg001-quantitative-finance-timeline/","text":""},{"title":"stg001-long-only-latest-n-days-close-price-based-strategy","permalink":"http://semitrade.org/2018/10/14/stg001-long-only-latest-n-days-close-price-based-strategy/","text":"strategy 001: long only, when close price lower than previous n days close then buy in, sell if have position and close price higher than latest n days. 1 Data PrepareDue to the strategy is very very very simple, we just need daily OHLC data of stock. There’s no other data requirements. 2 Strategy DesignThe idea behand strategy above is Reversal Effect.The theory that stock prices overreact to relevant news so that extreme investment performance tends to reverse itself. Some studies indicate that short-term overreaction may lead to long-term reversals as investors recognize and correct past pricing errors.A reversal is a change in the direction of a price trend, which can be a positive or negative change against the prevailing trend. On a price chart, reversals undergo are cognizable change in the price structure.Read more:Reversal Based on the hypothesis, we test a long only starategy. Assuming that the stock down trend sustained n-bars then REVERSAL occur.The bar may by minutes or daily, depends on the trade frequceny . Reversal occur means price will goes up, so we buy in. Next question is when to exit? Also using REVERSAL, if the price is the highest price during the past m-bars, then we sell stock close the position.When we do backtest, we assumes that both n and m are stable duing a specific period. Strategy 001: Buy if \\(closePricet = min(closePrice{t-1}, closePrice{t-2},\\cdots,closePrice{t-n})\\)\\Sell if \\(closePricet = max(closePrice{t-1}, closePrice{t-2},\\cdots,closePrice{t-m})\\) 3. Backtest AnalysisUsing backtrader as backtest framework.Create class stg001 like below. We use paramaters long_window_size and exit_window_size stand for the compared bars past, default is 5 days. Paramter stop_loss_percent and take_profit_percent stand for when to stop loss and when to take profit. If we have position and the close price have stop_loss_percent decrease then we sell out.Otherwise,if the price goes up to take_profit_percent, we also sell out, take our profit. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384\"\"\"strategy 001: long only, when close price lower than previous n days close then buy in,sell if have position and close price higher than latest n days.\"\"\"class stg001(bt.Strategy): params = ( ('long_window_size', 5), ('exit_window_size', 5), ('stop_loss_percent', 0.02), ('take_profit_percent', 1), ('printlog', False), ) def log(self, txt, dt=None, doprint=False): ''' Logging function fot this strategy''' if self.params.printlog or doprint: dt = dt or self.datas[0].datetime.date(0) print('%s, %s' % (dt.isoformat(), txt)) def __init__(self): # Strategy desc self.name = \"stg001\" self.desc = \"Long only, Buy if the close is lower than last &#123;&#125;-bars, \\\\ Sell once in trade if the close is higher than last &#123;&#125;-bars.\".format( self.params.long_window_size,self.params.exit_window_size) # To keep track of pending orders and buy price/commission self.order = None self.buyprice = None self.buycomm = None # Keep a reference to the \"close\" line in the data[0] dataseries self.dataclose = self.datas[0].close def notify_order(self, order): if order.status in [order.Submitted, order.Accepted]: # Buy/Sell order submitted/accepted to/by broker - Nothing to do return # Check if an order has been completed # Attention: broker could reject order if not enough cash if order.status in [order.Completed]: if order.isbuy(): self.log( 'BUY EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f' % (order.executed.price, order.executed.value, order.executed.comm)) self.buyprice = order.executed.price self.buycomm = order.executed.comm else: # Sell self.log('SELL EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f' % (order.executed.price, order.executed.value, order.executed.comm)) self.bar_executed = len(self) self.price_executed = order.executed.price elif order.status in [order.Canceled, order.Margin, order.Rejected]: self.log('Order Canceled/Margin/Rejected') self.order = None def notify_trade(self, trade): if not trade.isclosed: return self.log('OPERATION PROFIT, GROSS %.2f, NET %.2f' % (trade.pnl, trade.pnlcomm)) def next(self): # Simply log the closing price of the series from the reference self.log('Close, %.2f' % self.dataclose[0]) # Check if an order is pending ... if yes, we cannot send a 2nd one if self.order: return # Check if we are in the market if not self.position: # Not yet ... we MIGHT BUY if ... if len(self.dataclose) &gt; self.params.long_window_size and (min(self.dataclose.get(size=self.params.long_window_size)) == self.dataclose[0]): # current close less than previous close self.log('BUY CREATE, %.2f' % self.dataclose[0]) # Keep track of the created order to avoid a 2nd order self.order = self.buy() else: # Already in the market ... we might sell # Stop Loss at Specific Percent Order if (len(self.dataclose) &gt; self.params.exit_window_size and (max(self.dataclose.get(size=self.params.exit_window_size)) == self.dataclose[0])) or self.dataclose[0] &lt;= (self.price_executed* (1-self.params.stop_loss_percent)) or self.dataclose[0] &gt;= (self.price_executed* (1+self.params.take_profit_percent)): # SELL, SELL, SELL!!! (with all possible default parameters) self.log('SELL CREATE, %.2f' % self.dataclose[0]) # Keep track of the created order to avoid a 2nd order self.order = self.sell() Using China Stock 600132 as example, data start from 2015-01-01 end to 2018-10-17, daily OHLCV data. Execute price is next open price, set commission 0.0005, and fixed 500 shares per transaction, orginal account balance to 50000. 3.1 Raw: 5-bars in, 5-bars exit,no stop_loss, no take_profit.Backtest result like below. The Return=6.57%, while annual return is very small, average around 1%. The most important is loss transaction(64 times) larger than win transcation(54 times),it means more times the strategy failed. 1234567891011121314151617181920\"\"\"Backtest stg001 Stock 600132Data Shape (922, 5)Orignal Acc Bal: 50,000Shares per trans: 500Commission: 5/10000Summary of stg001: Long only, Buy if the close is lower than last 5-bars, Sell once in trade if the close is higher than last 5-bars.Return: 6.57%(53,395/50,000)Sharp Ratio: 0.70%PnL Net: 2,947(Gross:4,057)SQN: 0.58Max Drawdown: 6.30%Max Drawdown: 3,199($)/409(Days)Trans(Win/Loss): 118(54+/64-)Annual Return: AR_2015 : 0.78% AR_2016 : 0.83% AR_2017 : 3.10% AR_2018 : 1.94%\"\"\" 3.2 Better: 5-bars in, 5-bars exit, stop_loss at 2% decrease, take_profit at 10% up.Both annual return and win/loss ratio are better than the previous one. 1234567891011121314151617181920212223242526\"\"\"Backtest stg001 Stock 600132Data Shape (922, 5)Orignal Acc Bal: 50,000Shares per trans: 500Commission: 5/10000-------Summary-------Summary of stg001: Long onlyBuy if the close is lower than last 5-bars.Sell if the close is higher than last 5-bars.Stop loss when price decrease 2%.Take profit when up 10% percent.------------------------------------------Return: 20.31%(61,260/50,000)Sharp Ratio: 2.58%PnL Net: 11,260(Gross:12,250)SQN: 2.16Max Drawdown: 5.72%Max Drawdown: 2,980($)/99(Days)Trans(Win/Loss): 105(71+/34-)Annual Return: AR_2015 : 6.93% AR_2016 : 3.62% AR_2017 : 6.79% AR_2018 : 3.54%\"\"\" 3.3 Best: What are the best paramesters in this strategy for this stock?In fact I scaned a range of parameters using code below: 1234Parallel(n_jobs=-1)(delayed(cerebro_run)(df, long_sz, exit_sz,slp,1) for long_sz in range(3,30) for exit_sz in range(1,10) for slp in [i/100 for i in range(2,5)]) Finally find below parameter is better than above one, results and plot like below: 1234567891011121314151617181920212223242526\"\"\"Backtest stg001 Stock 600132Data Shape (922, 5)Orignal Acc Bal: 50,000Shares per trans: 500Commission: 5/10000-------Summary-------Summary of stg001: Long onlyBuy if the close is lower than last 4-bars.Sell if the close is higher than last 8-bars.Stop loss when price decrease 2%.Take profit when price up 20% percent.------------------------------------------Return: 34.45%(70,563/50,000)Sharp Ratio: 2.74%PnL Net: 20,115(Gross:21,178)SQN: 3.26Max Drawdown: 5.38%Max Drawdown: 2,977($)/52(Days)Trans(Win/Loss): 110(70+/40-)Annual Return: AR_2015 : 13.91% AR_2016 : 6.63% AR_2017 : 6.86% AR_2018 : 8.73%\"\"\" 4. Further StepIs there any chance to upgrade the strategy? Maybe: Remove the requirements on Long Only Add Long requirements using TA indicators to detect Rversal moreexact. Drop assumption that both n and m are stable duing a specificperiod, means flexible long_window_size and exit_window_sizeduring backtest."}]}